{"ast":null,"code":"var _jsxFileName = \"/Users/himzei/Documents/GitHub/boilerplate/src/components/LoginPage/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport firebase from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  const [errorFromSubmit, setErrorFromSubmit] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const {\n    register,\n    watch,\n    errors,\n    handleSubmit\n  } = useForm({\n    mode: \"onChange\"\n  });\n  const password = useRef();\n  password.current = watch(\"password\");\n\n  const onSubmit = async data => {\n    try {\n      setLoading(true);\n      let createdUser = await firebase.auth().createUserWithEmailAndPassword(data.email, data.password);\n      await createdUser.user.updateProfile({\n        displayName: data.name,\n        photoURL: `http://gravatar.com/avatar/${md5(createdUser.user.email)}?d-identicon`\n      }); // 데이터베이스에 저장\n\n      await firebase.database().ref(\"users\").child(createdUser.user.uid).set({\n        name: createdUser.user.displayName,\n        image: createdUser.user.photoURL,\n        email: createdUser.user.email\n      });\n      setLoading(false);\n    } catch (error) {\n      setErrorFromSubmit(error.message);\n      setLoading(false);\n      setTimeout(() => {\n        setErrorFromSubmit(error.message);\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC774\\uBA54\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        ref: register({\n          required: true,\n          pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \" text-red-500 font-light\",\n        children: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), errors.email && errors.email.type === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \" text-red-500 font-light\",\n        children: [\"\\uC774\\uBA54\\uC77C \\uD615\\uC2DD\\uC5D0 \\uB9DE\\uAC8C \\uC785\\uB825\\uC744 \\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC774\\uB984\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        ref: register({\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), errors.name && errors.name.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \" text-red-500 font-light\",\n        children: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        ref: register({\n          required: true,\n          minLength: 6\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), errors.password && errors.password.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \" text-red-500 font-light\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC785\\uB825\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), errors.password && errors.password.type === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \" text-red-500 font-light\",\n        children: [\"\\uBE44\\uBC00\\uBC88\\uD638\\uB294 \\uCD5C\\uC18C 6\\uC790 \\uC774\\uC0C1\\uC774\\uC5B4\\uC57C \\uD569\\uB2C8\\uB2E4.\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password_confirm\",\n        ref: register({\n          required: true,\n          validate: value => value === password.current\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), errors.password_confirm && errors.password_confirm.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \" text-red-500 font-light\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\\uC744 \\uC785\\uB825\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), errors.password_confirm && errors.password_confirm.type === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \" text-red-500 font-light\",\n        children: [\"\\uBE44\\uBC00\\uBC88\\uD638\\uC640 \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\\uC740 \\uAC19\\uC544\\uC57C \\uD569\\uB2C8\\uB2E4.\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), errorFromSubmit && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \" text-red-500 font-light\",\n        children: errorFromSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"mfaVw5Qls7WOwF8CBsZHZfCdpR0=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/himzei/Documents/GitHub/boilerplate/src/components/LoginPage/LoginPage.js"],"names":["React","useState","useForm","firebase","LoginPage","errorFromSubmit","setErrorFromSubmit","loading","setLoading","register","watch","errors","handleSubmit","mode","password","useRef","current","onSubmit","data","createdUser","auth","createUserWithEmailAndPassword","email","user","updateProfile","displayName","name","photoURL","md5","database","ref","child","uid","set","image","error","message","setTimeout","textAlign","required","pattern","type","minLength","validate","value","password_confirm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA;AAA3B,MAA4CV,OAAO,CAAC;AACxDW,IAAAA,IAAI,EAAE;AADkD,GAAD,CAAzD;AAIA,QAAMC,QAAQ,GAAGC,MAAM,EAAvB;AACAD,EAAAA,QAAQ,CAACE,OAAT,GAAmBN,KAAK,CAAC,UAAD,CAAxB;;AAEA,QAAMO,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC/B,QAAI;AACFV,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAIW,WAAW,GAAG,MAAMhB,QAAQ,CAC7BiB,IADqB,GAErBC,8BAFqB,CAEUH,IAAI,CAACI,KAFf,EAEsBJ,IAAI,CAACJ,QAF3B,CAAxB;AAIA,YAAMK,WAAW,CAACI,IAAZ,CAAiBC,aAAjB,CAA+B;AACnCC,QAAAA,WAAW,EAAEP,IAAI,CAACQ,IADiB;AAEnCC,QAAAA,QAAQ,EAAG,8BAA6BC,GAAG,CACzCT,WAAW,CAACI,IAAZ,CAAiBD,KADwB,CAEzC;AAJiC,OAA/B,CAAN,CANE,CAaF;;AACA,YAAMnB,QAAQ,CAAC0B,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,EAAiCC,KAAjC,CAAuCZ,WAAW,CAACI,IAAZ,CAAiBS,GAAxD,EAA6DC,GAA7D,CAAiE;AACrEP,QAAAA,IAAI,EAAEP,WAAW,CAACI,IAAZ,CAAiBE,WAD8C;AAErES,QAAAA,KAAK,EAAEf,WAAW,CAACI,IAAZ,CAAiBI,QAF6C;AAGrEL,QAAAA,KAAK,EAAEH,WAAW,CAACI,IAAZ,CAAiBD;AAH6C,OAAjE,CAAN;AAMAd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KArBD,CAqBE,OAAO2B,KAAP,EAAc;AACd7B,MAAAA,kBAAkB,CAAC6B,KAAK,CAACC,OAAP,CAAlB;AACA5B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA6B,MAAAA,UAAU,CAAC,MAAM;AACf/B,QAAAA,kBAAkB,CAAC6B,KAAK,CAACC,OAAP,CAAlB;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GA7BD;;AA+BA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAM,MAAA,QAAQ,EAAE1B,YAAY,CAACK,QAAD,CAA5B;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,GAAG,EAAER,QAAQ,CAAC;AACZ8B,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,OAAO,EAAE;AAFG,SAAD;AAHf;AAAA;AAAA;AAAA;AAAA,cAFF,EAWG7B,MAAM,CAACW,KAAP,IAAgBX,MAAM,CAACW,KAAP,CAAamB,IAAb,KAAsB,UAAtC,iBACC;AAAG,QAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,EAgBG9B,MAAM,CAACW,KAAP,IAAgBX,MAAM,CAACW,KAAP,CAAamB,IAAb,KAAsB,SAAtC,iBACC;AAAG,QAAA,SAAS,EAAC,0BAAb;AAAA,mIAC0B,GAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,eAuBE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,GAAG,EAAEhC,QAAQ,CAAC;AAAE8B,UAAAA,QAAQ,EAAE;AAAZ,SAAD;AAA5C;AAAA;AAAA;AAAA;AAAA,cAvBF,EAwBG5B,MAAM,CAACe,IAAP,IAAef,MAAM,CAACe,IAAP,CAAYe,IAAZ,KAAqB,UAApC,iBACC;AAAG,QAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ,eA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF,eA6BE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,GAAG,EAAEhC,QAAQ,CAAC;AAAE8B,UAAAA,QAAQ,EAAE,IAAZ;AAAkBG,UAAAA,SAAS,EAAE;AAA7B,SAAD;AAHf;AAAA;AAAA;AAAA;AAAA,cA7BF,EAkCG/B,MAAM,CAACG,QAAP,IAAmBH,MAAM,CAACG,QAAP,CAAgB2B,IAAhB,KAAyB,UAA5C,iBACC;AAAG,QAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCJ,EAuCG9B,MAAM,CAACG,QAAP,IAAmBH,MAAM,CAACG,QAAP,CAAgB2B,IAAhB,KAAyB,WAA5C,iBACC;AAAG,QAAA,SAAS,EAAC,0BAAb;AAAA,6HACyB,GADzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCJ,eA6CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7CF,eA8CE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,kBAFP;AAGE,QAAA,GAAG,EAAEhC,QAAQ,CAAC;AACZ8B,UAAAA,QAAQ,EAAE,IADE;AAEZI,UAAAA,QAAQ,EAAGC,KAAD,IAAWA,KAAK,KAAK9B,QAAQ,CAACE;AAF5B,SAAD;AAHf;AAAA;AAAA;AAAA;AAAA,cA9CF,EAsDGL,MAAM,CAACkC,gBAAP,IACClC,MAAM,CAACkC,gBAAP,CAAwBJ,IAAxB,KAAiC,UADlC,iBAEG;AAAG,QAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxDN,EA4DG9B,MAAM,CAACkC,gBAAP,IACClC,MAAM,CAACkC,gBAAP,CAAwBJ,IAAxB,KAAiC,SADlC,iBAEG;AAAG,QAAA,SAAS,EAAC,0BAAb;AAAA,wIAC0B,GAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,cA9DN,EAkEGpC,eAAe,iBACd;AAAG,QAAA,SAAS,EAAC,0BAAb;AAAA,kBAAyCA;AAAzC;AAAA;AAAA;AAAA;AAAA,cAnEJ,eAqEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAEE;AAA/B;AAAA;AAAA;AAAA;AAAA,cArEF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8ED;;GAvHQH,S;UAG2CF,O;;;KAH3CE,S;AAyHT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport firebase from \"../../firebase\";\n\nfunction LoginPage() {\n  const [errorFromSubmit, setErrorFromSubmit] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { register, watch, errors, handleSubmit } = useForm({\n    mode: \"onChange\",\n  });\n\n  const password = useRef();\n  password.current = watch(\"password\");\n\n  const onSubmit = async (data) => {\n    try {\n      setLoading(true);\n      let createdUser = await firebase\n        .auth()\n        .createUserWithEmailAndPassword(data.email, data.password);\n\n      await createdUser.user.updateProfile({\n        displayName: data.name,\n        photoURL: `http://gravatar.com/avatar/${md5(\n          createdUser.user.email\n        )}?d-identicon`,\n      });\n\n      // 데이터베이스에 저장\n      await firebase.database().ref(\"users\").child(createdUser.user.uid).set({\n        name: createdUser.user.displayName,\n        image: createdUser.user.photoURL,\n        email: createdUser.user.email,\n      });\n\n      setLoading(false);\n    } catch (error) {\n      setErrorFromSubmit(error.message);\n      setLoading(false);\n      setTimeout(() => {\n        setErrorFromSubmit(error.message);\n      }, 5000);\n    }\n  };\n\n  return (\n    <div className=\"auth-wrapper\">\n      <div style={{ textAlign: \"center\" }}>\n        <h3>회원가입</h3>\n      </div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label>이메일</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          ref={register({\n            required: true,\n            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n          })}\n        />\n\n        {errors.email && errors.email.type === \"required\" && (\n          <p className=\" text-red-500 font-light\">\n            이메일을 입력하셔야 합니다.\n          </p>\n        )}\n        {errors.email && errors.email.type === \"pattern\" && (\n          <p className=\" text-red-500 font-light\">\n            이메일 형식에 맞게 입력을 하셔야 합니다.{\" \"}\n          </p>\n        )}\n\n        <label>이름</label>\n        <input name=\"name\" type=\"text\" ref={register({ required: true })} />\n        {errors.name && errors.name.type === \"required\" && (\n          <p className=\" text-red-500 font-light\">이름을 입력하셔야 합니다.</p>\n        )}\n\n        <label>비밀번호</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          ref={register({ required: true, minLength: 6 })}\n        />\n        {errors.password && errors.password.type === \"required\" && (\n          <p className=\" text-red-500 font-light\">\n            비밀번호 입력하셔야 합니다.\n          </p>\n        )}\n        {errors.password && errors.password.type === \"minLength\" && (\n          <p className=\" text-red-500 font-light\">\n            비밀번호는 최소 6자 이상이어야 합니다.{\" \"}\n          </p>\n        )}\n\n        <label>비밀번호 확인</label>\n        <input\n          type=\"password\"\n          name=\"password_confirm\"\n          ref={register({\n            required: true,\n            validate: (value) => value === password.current,\n          })}\n        />\n        {errors.password_confirm &&\n          errors.password_confirm.type === \"required\" && (\n            <p className=\" text-red-500 font-light\">\n              비밀번호 확인을 입력하셔야 합니다.\n            </p>\n          )}\n        {errors.password_confirm &&\n          errors.password_confirm.type === \"pattern\" && (\n            <p className=\" text-red-500 font-light\">\n              비밀번호와 비밀번호 확인은 같아야 합니다.{\" \"}\n            </p>\n          )}\n        {errorFromSubmit && (\n          <p className=\" text-red-500 font-light\">{errorFromSubmit}</p>\n        )}\n        <input type=\"submit\" disabled={loading} />\n      </form>\n    </div>\n  );\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}